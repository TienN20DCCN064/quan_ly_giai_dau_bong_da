// lich_thi_dau.js - T·∫°o l·ªãch thi ƒë·∫•u t·ª± ƒë·ªông

function taoLichThiDau({
    doi_bong,
    the_thuc,
    so_luot_dau = 1,
    ngay_bat_dau,
    tran_moi_ngay = 2,
    san_thi_dau = [],
    khung_gio = ["15:00", "17:00"]
  }) {
    switch (the_thuc) {
      case "round_robin":
        return taoLichVongTron(doi_bong, so_luot_dau, ngay_bat_dau, tran_moi_ngay, san_thi_dau, khung_gio);
      case "knockout":
        return taoLichLoaiTrucTiep(doi_bong, ngay_bat_dau, tran_moi_ngay, san_thi_dau, khung_gio);
      case "group_stage":
        return taoLichVongBang(doi_bong, ngay_bat_dau, tran_moi_ngay, san_thi_dau, khung_gio);
      default:
        throw new Error("Th·ªÉ th·ª©c kh√¥ng h·ªó tr·ª£");
    }
  }
  
  function taoLichVongTron(doi_bong, so_luot_dau, ngay_bat_dau, tran_moi_ngay, san_thi_dau, khung_gio) {
    const so_le = doi_bong.length % 2 !== 0;
    if (so_le) doi_bong.push({ id: "bye", ten: "Ngh·ªâ" });
    const n = doi_bong.length;
    const tong_vong = (n - 1) * so_luot_dau;
    const lich = [];
  
    const ngay = new Date(ngay_bat_dau);
    let tran_id = 1;
  
    for (let vong = 0; vong < tong_vong; vong++) {
      for (let i = 0; i < n / 2; i++) {
        const doi_nha = doi_bong[i];
        const doi_khach = doi_bong[n - 1 - i];
        if (doi_nha.id !== "bye" && doi_khach.id !== "bye") {
          const san = san_thi_dau[(tran_id - 1) % san_thi_dau.length] || null;
          const gio = khung_gio[(tran_id - 1) % khung_gio.length];
          lich.push({
            tran_id: tran_id++,
            doi_nha: doi_nha.ten,
            doi_khach: doi_khach.ten,
            vong: vong + 1,
            ngay: ngay.toISOString().split("T")[0],
            gio,
            san
          });
        }
        if (tran_id % tran_moi_ngay === 1) {
          ngay.setDate(ngay.getDate() + 1);
        }
      }
      doi_bong.splice(1, 0, doi_bong.pop());
    }
  
    return lich;
  }
  
  function taoLichLoaiTrucTiep(doi_bong, ngay_bat_dau, tran_moi_ngay, san_thi_dau, khung_gio) {
    const lich = [];
    const ngay = new Date(ngay_bat_dau);
    let tran_id = 1;
    let vong = 1;
    let dsDoiHienTai = [...doi_bong];
  
    while (dsDoiHienTai.length > 1) {
      const doiVongTiep = [];
      for (let i = 0; i < dsDoiHienTai.length; i += 2) {
        const doi_nha = dsDoiHienTai[i];
        const doi_khach = dsDoiHienTai[i + 1] || { id: "bye", ten: "Ngh·ªâ" };
        const san = san_thi_dau[(tran_id - 1) % san_thi_dau.length] || null;
        const gio = khung_gio[(tran_id - 1) % khung_gio.length];
        lich.push({
          tran_id: tran_id++,
          doi_nha: doi_nha.ten,
          doi_khach: doi_khach.ten,
          vong,
          ngay: ngay.toISOString().split("T")[0],
          gio,
          san
        });
        if (doi_khach.id !== "bye") {
          doiVongTiep.push({ id: `W${tran_id - 1}`, ten: `Th·∫Øng tr·∫≠n ${doi_nha.ten} vs ${doi_khach.ten}` });
        } else {
          doiVongTiep.push(doi_nha);
        }
        if (tran_id % tran_moi_ngay === 1) {
          ngay.setDate(ngay.getDate() + 1);
        }
      }
      dsDoiHienTai = doiVongTiep;
      vong++;
    }
  
    return lich;
  }
  
  function taoLichVongBang(doi_bong, ngay_bat_dau, tran_moi_ngay, san_thi_dau, khung_gio) {
    return []; // Ch∆∞a l√†m
  }
  
  // ------------------------ D·ªÆ LI·ªÜU TH·ª¨ NGHI·ªÜM ------------------------
  function inCacHinhThucThiDau() {
    const theThuc = [
      {
        ma: "round_robin",
        ten: "V√≤ng tr√≤n (Round Robin)",
        mo_ta: "M·ªói ƒë·ªôi s·∫Ω thi ƒë·∫•u v·ªõi t·∫•t c·∫£ c√°c ƒë·ªôi c√≤n l·∫°i 1 ho·∫∑c 2 l∆∞·ª£t (l∆∞·ª£t ƒëi/l∆∞·ª£t v·ªÅ)."
      },
      {
        ma: "knockout",
        ten: "Lo·∫°i tr·ª±c ti·∫øp (Knockout)",
        mo_ta: "C√°c ƒë·ªôi ƒë·∫•u lo·∫°i tr·ª±c ti·∫øp, ƒë·ªôi thua b·ªã lo·∫°i, ƒë·ªôi th·∫Øng ƒëi ti·∫øp v√†o v√≤ng sau cho ƒë·∫øn khi c√≤n 1 ƒë·ªôi v√¥ ƒë·ªãch."
      },
      {
        ma: "group_stage",
        ten: "V√≤ng b·∫£ng (Group Stage)",
        mo_ta: "C√°c ƒë·ªôi ƒë∆∞·ª£c chia th√†nh c√°c b·∫£ng, thi ƒë·∫•u v√≤ng tr√≤n trong m·ªói b·∫£ng. ƒê·ªôi ƒë·ª©ng ƒë·∫ßu b·∫£ng s·∫Ω v√†o v√≤ng ti·∫øp theo. (Ch∆∞a h·ªó tr·ª£ ƒë·∫ßy ƒë·ªß)"
      }
    ];
  
    console.log("üìå C√°c h√¨nh th·ª©c thi ƒë·∫•u h·ªó tr·ª£:");
    theThuc.forEach(ht => {
      console.log(`- ${ht.ten}`);
      console.log(`  + M√£: ${ht.ma}`);
      console.log(`  + M√¥ t·∫£: ${ht.mo_ta}`);
    });
  }
  
  const dauVao = {
    doi_bong: [
      { id: 1, ten: "ƒê·ªôi A" },
      { id: 2, ten: "ƒê·ªôi B" },
      { id: 3, ten: "ƒê·ªôi C" },
      { id: 4, ten: "ƒê·ªôi D" }
    ],
    the_thuc: "round_robin",
    so_luot_dau: 1,
    ngay_bat_dau: "2025-05-01",
    tran_moi_ngay: 2,
    san_thi_dau: ["S√¢n A", "S√¢n B"],
    khung_gio: ["15:00", "17:00"]
  };
  
  const lichThiDau = taoLichThiDau(dauVao);
  console.log("‚úÖ L·ªãch thi ƒë·∫•u t·ª± ƒë·ªông:");
  console.log(lichThiDau);
  inCacHinhThucThiDau();
